# ShadowTrace Sentinel Recording Rules
# These rules pre-compute frequently needed expressions and store them as new time series

groups:
  - name: sentinel.recording.rules
    interval: 30s
    rules:
      # Performance Recording Rules
      - record: sentinel:cpu_usage_rate_5m
        expr: rate(sentinel_cpu_usage_seconds_total[5m])

      - record: sentinel:memory_usage_percent
        expr: (sentinel_memory_usage_bytes / sentinel_memory_limit_bytes) * 100

      - record: sentinel:disk_usage_percent
        expr: (sentinel_disk_usage_bytes / sentinel_disk_total_bytes) * 100

      - record: sentinel:network_traffic_rate_5m
        expr: rate(sentinel_network_bytes_total[5m])

      # Security Recording Rules
      - record: sentinel:honeypot_triggers_rate_5m
        expr: rate(sentinel_honeypot_triggers_total[5m])

      - record: sentinel:auth_failure_rate_5m
        expr: rate(sentinel_auth_failures_total[5m])

      - record: sentinel:suspicious_activity_rate_1h
        expr: rate(sentinel_suspicious_activity_total[1h])

      # Aggregated metrics by instance
      - record: sentinel:total_connections_by_instance
        expr: sum(sentinel_active_connections) by (instance)

      - record: sentinel:total_triggers_by_honeypot
        expr: sum(sentinel_honeypot_triggers_total) by (honeypot_id)

      - record: sentinel:total_threats_by_source
        expr: sum(sentinel_threats_total) by (source_ip, country_code)

  - name: sentinel.availability.rules
    interval: 60s
    rules:
      # Service availability
      - record: sentinel:service_availability
        expr: avg_over_time(up{job="sentinel-honeypot"}[5m])

      - record: sentinel:database_availability
        expr: avg_over_time(sentinel_database_connection_status[5m])

      - record: sentinel:alerting_availability
        expr: avg_over_time(sentinel_alerting_system_status[5m])

  - name: sentinel.aggregated.rules
    interval: 300s  # 5 minutes
    rules:
      # Daily aggregations
      - record: sentinel:daily_threat_count
        expr: increase(sentinel_threats_total[24h])

      - record: sentinel:daily_honeypot_triggers
        expr: increase(sentinel_honeypot_triggers_total[24h])

      - record: sentinel:daily_unique_attackers
        expr: count(increase(sentinel_threats_total[24h]) > 0) by (source_ip)

      # Hourly aggregations
      - record: sentinel:hourly_threat_rate
        expr: rate(sentinel_threats_total[1h])

      - record: sentinel:hourly_data_processed
        expr: increase(sentinel_data_processed_bytes_total[1h])

  - name: sentinel.geographic.rules
    interval: 300s
    rules:
      # Geographic threat distribution
      - record: sentinel:threats_by_country_1h
        expr: sum(increase(sentinel_threats_total[1h])) by (country_code)

      - record: sentinel:top_threat_countries_24h
        expr: topk(10, sum(increase(sentinel_threats_total[24h])) by (country_code))

  - name: sentinel.trend.rules
    interval: 600s  # 10 minutes
    rules:
      # Trend analysis
      - record: sentinel:threat_trend_24h
        expr: |
          (
            sum(increase(sentinel_threats_total[1h])) - 
            sum(increase(sentinel_threats_total[1h] offset 24h))
          ) / sum(increase(sentinel_threats_total[1h] offset 24h)) * 100

      - record: sentinel:performance_trend_24h
        expr: |
          (
            avg(sentinel:cpu_usage_rate_5m) - 
            avg(sentinel:cpu_usage_rate_5m offset 24h)
          ) / avg(sentinel:cpu_usage_rate_5m offset 24h) * 100
